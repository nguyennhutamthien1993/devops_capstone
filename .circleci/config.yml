version: 2.1

orbs:
  docker: circleci/docker@2.1.2

jobs:
  run-lint:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "container/requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv ~/.devops_capstone
            source ~/.devops_capstone/bin/activate
            ls
            cd devops_capstone/container
            make install
      - save_cache:
          paths:
            - ./.devops_capstone
          key: v1-dependencies-{{ checksum "container/requirements.txt" }}
      - run:
          name: Run lint
          command: |
            source ~/.devops_capstone/bin/activate
            make lint

  build-and-push-docker-image:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install awscli
          command: |
            sudo pip3 install awscli
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
          name: Install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl

      - setup_remote_docker

      - run:
          name: Login to repository and build docker image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker build -t thiennnt/capstone_devops:1.0.0 .
            docker push thiennnt/capstone_devops:1.0.0
      - run:
          name: Prepare K8S templates
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
      - run:
          name: Deploy
          command: |
            envsubst < kubernetes/deployment.yaml | kubectl apply --filename -
            envsubst < kubernetes/service.yaml | kubectl apply --filename -
            kubectl get pod
workflows:
  default:
    jobs:
      - run-lint
      - build-and-push-docker-image:
          requires: [run-lint]